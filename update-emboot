#! /bin/bash

cmd=$0

inc_counter=
krel=
remove=
seal_only=
no_seal=
no_act=
force=
while getopts 'ik:rsSnfh' opt; do
    case "$opt" in
        i) inc_counter=1 ;;
        k) krel=$OPTARG ;;
        r) remove=1 ;;
        s) seal_only=1 ;;
        S) no_seal=1 ;;
        n) no_act=1 ;;
        f) force=1 ;;
        h)
            cat >&2 <<EOF
syntax: $(basename $0) <options>

operations: (default is to update loaders and seal)
  -r                   Remove token for given kernel release (requires -k)
  -s                   Do not update loaders: (re)seal/create tokens only
  -S                   Do not seal/create tokens: update loaders only
  -h                   Help

parameters:
  -i                   Increment monotonic counter before sealing
  -k <kernel release>  Apply operation to given kernel release only
  -n                   No act: print command lines
  -f                   Force: skip checks
EOF
            exit 0
            ;;
        :) echo "$OPTARG requires an argument" >&2; exit 1;;
        ?) echo "unknown argument" >&2; exit 1;;
    esac
done
shift $((OPTIND-1))

[ -r /etc/efi-measured-boot/config ] && . /etc/efi-measured-boot/config
if [[ $cmd = ./* ]]; then APPDIR=.; fi
. "${APPDIR:-.}"/functions
. "${APPDIR:-.}"/bash_functions

do_or_show() {
    if [ -n "$no_act" ]; then
        quote_args "$@" >&2
        printf "\n" >&2
    else
        "$@"
    fi
}

set -e

if [ -n "$remove" ]; then
    [ -n "$force" -o -n "$krel" ] || { echo "-r requires -k to be specified"; exit 1; }

    rootdev=( $(get_device_info /) )
    cryptdev=( $(get_crypttab_entry "${rootdev[1]}") )
    do_or_show remove_luks_token "${cryptdev[1]}" "$krel"
    exit 0
else
    [ -n "$force" -o -z "$seal_only" -o -z "$no_seal" ] || { echo "conflicting operations -s and -S"; exit 1; }
    [ -n "$force" -o -z "$no_seal" -o -z "$inc_counter" ] || { echo "cannot increment counter without sealing"; exit 1; }
    [ -n "$force" -o -z "$inc_counter" -o -z "$krel" ] || { echo "cannot increment counter and specify kernel release"; exit 1; }

    if [ -z "$seal_only" ]; then
        do_or_show "$APPDIR"/emboot_install ${krel:+-k "$krel"}
        do_or_show "$APPDIR"/emboot_update_efi_apps
        do_or_show "$APPDIR"/emboot_update_efi_boot_order
    fi

    if [ -n "$inc_counter" ]; then
        do_or_show increment_counter
    fi

    if [ -z "$no_seal" ]; then
        if [ -n "$krel" ]; then
            do_or_show "$APPDIR"/emboot_seal_key -k "$krel"
        elif [ -n "$seal_only" ]; then
            do_or_show "$APPDIR"/emboot_seal_key -a
        else
            do_or_show "$APPDIR"/emboot_seal_key
        fi
    fi
fi
