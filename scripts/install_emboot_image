#! /bin/bash

set -e

exec 3>&1 1>&2

buildre() {
    local IFS='|'
    echo "$*"
}

rootdev=( $(lsblk -n -o UUID,PATH,MOUNTPOINT -r | awk '$3 == "/" { print $1 " " $2; }') )
rootuuid=${rootdev[0]}
rootdevnode=${rootdev[1]}

parentdevices=( $(lsblk -n -o UUID -r -s -t $rootdevnode | grep '.') )
OLDIFS=$IFS
IFS=$'\n'
crypttabentries=( $(sed -e 's/#.*//' /etc/crypttab | grep -E "UUID=($(buildre ${parentdevices[@]}))") )
IFS=$OLDIFS
if (( ${#crypttabentries[@]} > 1 )); then
    echo 'root hosted on multiple crypttab entries not supported'
    IFS=$'\n'; echo "${crypttabentries[*]}"
    exit 1
fi
cryptdev=( ${crypttabentries[0]} )

if [[ ${cryptdev[3]} != *luks* ]]; then
    echo 'crypttab entry missing luks option'
    echo "${cryptdev[3]}"
    exit 1
fi

if [[ ${cryptdev[3]} != *keyscript=*emboot_unseal* ]]; then
    echo 'keyscript option in crypttab entry missing or invalid'
    echo "${cryptdev[3]}"
    exit 1
fi

. /etc/efi-measured-boot/config

echo "root=UUID=$rootuuid cryptdevice=${cryptdev[1]}:${cryptdev[0]} $KERNEL_PARAMS" >/tmp/kernel-command-line.txt

sudo objcopy \
    --add-section .osrel="/usr/lib/os-release" --change-section-vma .osrel=0x20000 \
    --add-section .cmdline="/tmp/kernel-command-line.txt" --change-section-vma .cmdline=0x30000 \
    --add-section .linux="/vmlinuz" --change-section-vma .linux=0x2000000 \
    --add-section .initrd="/initrd.img" --change-section-vma .initrd=0x3000000 \
    /usr/lib/systemd/boot/efi/linuxx64.efi.stub /boot/efi/EFI/debian/linux.efi

sudo dash -c 'set -e;
mkdir -p /tmp/emboot-setup;
cd /tmp/emboot-setup;
. /etc/efi-measured-boot/config;
. /etc/efi-measured-boot/functions;
read_counter >counter;
predict_future_pcrs;
create_provision_context;
seal_data </etc/keys/luks-tpm.key;
vmlinuz_target=$(basename $(readlink /vmlinuz));
efi_emboot_dir=$EFI_MOUNT/EFI/debian/emboot/${vmlinuz_target#vmlinuz-};
mkdir -p "$efi_emboot_dir";
cp -f counter sealed.pub sealed.priv "$efi_emboot_dir"'

#sudo rm -rf /tmp/emboot-setup
