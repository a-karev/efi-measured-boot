#! /bin/bash

cmd=$0

exec 3>&1 1>&2

buildre() {
    local IFS='|'
    echo "${*//\//\\\/}"
}

help_exit() {
    cat <<EOF
Syntax: $(basename $cmd) [<opt> ...] <device node>
Options:
    -v              Be verbose
    -h              Show help
EOF
exit 0
}

vlog() {
    if (( $verbose != 0 )); then
        echo "$1" 1>&2
    fi
}

verbose=0

while getopts ':hv' opt; do
    case "$opt" in
        h)
            help_exit
            ;;
        v)
            verbose=1
            ;;
        :)
            echo "$OPTARG requires an argument"
            ;;
        ?)
            echo "unknown argument"
            exit 1
            ;;
    esac
done
shift $((OPTIND-1))

devnode=$1

if ! shift; then
    help_exit
fi

set -e

parentdevices=( $(lsblk -s -t $devnode -o UUID -n -r | grep '.') )
parentdevicenodes=( $(lsblk -p -s -t $devnode -o NAME -n -r | grep '.') )
vlog "parent device UUIDs are ${parentdevices[*]}"
vlog "parent device nodes are ${parentdevicenodes[*]}"
OLDIFS=$IFS
IFS=$'\n'
crypttabentries=( $(sed -e 's/#.*//' /etc/crypttab | grep -E "UUID=($(buildre ${parentdevices[@]}))" || true) )
if (( ${#crypttabentries[@]} == 0 )); then
    echo 'crypttab entry not found via UUID; trying node'
    crypttabentries=( $(sed -e 's/#.*//' /etc/crypttab | grep -E "$(buildre ${parentdevicenodes[@]})" || true) )
fi
vlog "matching crypttab entries are: ${crypttabentries[*]}"
IFS=$OLDIFS
if (( ${#crypttabentries[@]} == 0 )); then
    echo 'crypttab entry not found'
    exit 1
fi
if (( ${#crypttabentries[@]} > 1 )); then
    echo 'filesystem in multiple crypttab entries unsupported'
    IFS=$'\n'; echo "${crypttabentries[*]}"
    exit 1
fi
cryptdev=( ${crypttabentries[0]} )

IFS=' '; echo "${cryptdev[*]}" 1>&3
