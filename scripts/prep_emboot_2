#! /bin/bash

exec 3>&1 1>&2

CONFIGDIR=/etc/efi-measured-boot

. $CONFIGDIR/config
. ./functions

quote_args() {
    sq="'"
    dq='"'
    fs=/
    space=""
    for w; do
        if [ -n "$w" -a -z "${w//[0-9a-zA-Z_,.:=$fs-]}" ]; then
            echo -n "$space$w"
        else
            qw="'${w//$sq/$sq$dq$sq$dq$sq}'"
            qw=${qw//$sq$sq}
            echo -n "$space${qw:-$sq$sq}"
        fi
        space=" "
    done
}

quote_re() {
    echo "$1" | sed -e 's/[]\/\\^$*+?.()|[{}-]/\\\0/g'
}

device_to_disk_and_partition() {
    dev=$1
    devpartuuid=$(lsblk -n -o PARTUUID -r "$dev" | tr a-z A-Z)
    parents=( $(lsblk -s -n -o NAME -r "$dev" | tail -n +2) )
    if (( ${#parents[@]} != 1 )); then
        echo "Don't know how to handle $dev with more than one parent: ${parents[*]}" 1>&2
        exit 1
    fi
    disk=/dev/${parents[0]}
    part=$(echo "$dev" | grep -o '[0-9]\+$')
    checkuuid=$(sgdisk "$disk" -i "$part" | grep -i 'Partition unique GUID' | sed 's/^.*://; s/[[:space:]]\+//g' | tr a-z A-Z)
    if [[ "$devpartuuid" != "$checkuuid" ]]; then
        echo "$dev somehow not $disk partition $part: PARTUUID mismatch ($devpartuuid vs $checkuuid)" 1>&2
        exit 1
    fi
    echo "$disk $part"
}

set -e

rootdevinfo=( $(./scripts/get_device_info /) )
cryptdev=( $(./scripts/get_crypttab_entry ${rootdevinfo[1]}) )

### BREAKING CHANGES BEGIN HERE

revert_changes() {
    echo "CLEANING UP"
    if [ -r "$LUKS_KEY" ]; then
        cryptsetup luksRemoveKey "${cryptdev[1]}" "$LUKS_KEY"
    fi
}

trap revert_changes INT TERM ERR
trap 'rc=$?; [ "$rc" -eq 0 ] && exit 0; revert_changes' EXIT

# Create a new key and add it to the LUKS header of the root partition
mkdir -m 0700 -p $(dirname "$LUKS_KEY")
if [ -e "$LUKS_KEY" ]; then
    echo "Using existing key $LUKS_KEY" 1>&2
else
    echo "Generating new key for root partition LUKS header"
    (umask 077 && dd if=/dev/urandom of="$LUKS_KEY" bs=128 count=1)
fi
echo "You may be prompted to enter an existing LUKS passphrase for your root partition"
cryptsetup luksAddKey "${cryptdev[1]}" "$LUKS_KEY"
